allprojects {
    String mainClassName = project.property("mainClassName")

    tasks.register("dataflow", JavaExec) {
        if (mainClassName == null) {
            printUsage("'dataflow'")
            actions.clear()
            return null
        }

        application.mainClass.set(mainClassName)
        classpath = files(tasks.shadowJar)
        mainClass.set(mainClassName)

        List<String> defaultArgs = [
                "--runner=dataflow",
                "--region=${region}",
                "--tempLocation=${tempLocation}"
        ]

        if (project.hasProperty("args")) {
            def _args = project.property("args").split(" ")
            defaultArgs.addAll(_args)
        }
        println(defaultArgs)
        args(defaultArgs)
        return
    }


    tasks.register("flink", JavaExec) {
        if (mainClassName == null) {
            printUsage("'flink'")
            actions.clear()
            return null
        }
        println("Use Flink Version ::: 1.17")
        dependencies {
            runtimeOnly("org.apache.beam:beam-runners-flink-1.17")
        }

        application.mainClass.set(mainClassName)
        classpath = files(tasks.shadowJar)
        mainClass.set(mainClassName)


        List<String> defaultArgs = [
                "--runner=flink",
                "--flinkMaster=${flinkMaster}",
                "--checkpointingInterval=${checkpointingInterval}",
                "--parallelism=${parallelism}"
        ]
        if (project.hasProperty("args")) {
            Collection<String> customArgs = project.property("args").split(" ")

            /**
             * if stateBackend option is rocksdb
             * then input RocksDB dependency
             */
            customArgs.stream().filter { String arg -> arg.startsWith "--stateBackend=" }
                    .findFirst()
                    .ifPresent {
                        def (_, value) = it.split("=")
                        if (value == "rocksdb") {
                            println("Use RocksDB ::: 1.17.2")
                            dependencies {
                                runtimeOnly("org.apache.flink:flink-statebackend-rocksdb:1.17.2")
                            }
                        }
                    }

            /**
             * if stateBackendStoragePath not specified
             * use default one
             */
            if (customArgs.stream().noneMatch { String arg -> arg.startsWith "--stateBackendStoragePath=" }) {
                println("Argument [stateBackendStoragePath] not specified\nUse default State Backend Storage Path")
                customArgs += "--stateBackendStoragePath=$DEFAULT_STATE_BACKEND_STORAGE_PATH"
            }

            defaultArgs.addAll(customArgs)
        }

        println(defaultArgs)
        args(defaultArgs)
    }

    tasks.register("local", JavaExec) {
        if (mainClassName == null) {
            printUsage("'local'")
            return null
        }
        application.mainClass.set(mainClassName)
        classpath = files(tasks.shadowJar)
        mainClass.set(mainClassName)

        args("--runner=direct")
    }

}

def printUsage(String taskName) {
    println("main class name must not be null, use " + taskName + " with -PmainClassName=<MAIN_CLASS_NAME>")
}
